{
    "collab_server" : "",
    "contents" : "\n# Load packages\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(lme4)\nlibrary(here)\n\n#Tidy data\n\n#here()\n\ntest <- read_excel(here(\"data\", \"Data_long_R_withL2.xlsx\"))\n\n#test <- read_excel(\"../data/Data_long_R_withL2.xlsx\")\n#View(test)\n\ntest <- test %>% \n  rename(., profEn = `prof en`, profSp = `prof sp`, corrResp = `response`, respBoth = `responded both`) %>% \n  filter(., status != \"distractor\") %>%\n  as.data.frame(.)\n\ntest$response <- 'hi'\n# Eng\ntest[test$status == 'overt' & test$language == 'eng' & test$corrResp == 1, 'response'] <- 'overt'\ntest[test$status == 'overt' & test$language == 'eng' & test$corrResp == 0, 'response'] <- 'null'\ntest[test$status == 'null'  & test$language == 'eng' & test$corrResp == 1, 'response'] <- 'null'\ntest[test$status == 'null'  & test$language == 'eng' & test$corrResp == 0, 'response'] <- 'overt'\n\n# Sp\ntest[test$status == 'overt' & test$language == 'sp'  & test$corrResp == 1, 'response'] <- 'overt'\ntest[test$status == 'overt' & test$language == 'sp'  & test$corrResp == 0, 'response'] <- 'null'\ntest[test$status == 'null'  & test$language == 'sp'  & test$corrResp == 1, 'response'] <- 'null'\ntest[test$status == 'null'  & test$language == 'sp'  & test$corrResp == 0, 'response'] <- 'overt'\n\ndf_null_sub <- test %>%\n  mutate(., respFactor = ifelse(response == 'overt', yes = 1, no = 0))\n\n#View(df_null_sub)\n\n  \n#Proficiency scores in English\n  \n\n\n# BESA scores as a function of group\nbesa_table_markdown <- df_null_sub %>% \n  group_by(., group) %>% \n  summarize(., mean_en = mean(profEn), sd_en = sd(profEn), mean_sp = mean(profSp), sd_sp = sd(profSp))%>%\n  knitr::kable(., format = 'markdown', digits = 2)\n\n\n#Average null and overt responses in English and Spanish for all groups\n  \n\nresponse_table_markdown <- df_null_sub %>% \n  group_by(., group, language, status) %>% \n  summarize(., meanResp = mean(respFactor))%>%\n  knitr::kable(., format = 'markdown', digits = 2) \n\n#English analysis\n\n# Create wide data frame with counts for each level of 'type' (overt, null)\n# Create new 'n' variable\n\ndf_counts_wide <- df_null_sub %>%\n  group_by(., participant, group, language, response, profEn, profSp) %>% \n  summarize(., total = sum(respFactor)) %>% \n  spread(., response, total) %>% \n  mutate(., null2 = 8 - overt, \n         n = 8) %>%\n  select(., -null) %>% \n  rename(., null = null2)\n\n#English continued\n\n# Convert to long and plot it\ndf_counts_long <- df_counts_wide %>% \n  gather(., key = type, value = count, -participant, -language, -group, -n, -profEn, -profSp) %>% \n  mutate(., perc = count / 8) %>%\n  arrange(., participant, language, type)\n\n#English plot\n\nenglish_plot <- df_counts_long %>% \n  filter(., language == \"eng\")%>%\n  ggplot(., aes(x = group, y = perc, color = type, dodge = type)) + \n  stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', position = position_dodge(0.5), size = 1) + \n  labs(y = \"% Response\", x = 'Group')\n\n# test with GLM\ndf_counts_wide$group <- factor(df_counts_wide$group, levels = c(\"l2\", \"mo\", \"hl\"))\nglm_null <- glm(cbind(overt, null) ~ 1, data = df_counts_wide[df_counts_wide$language == 'eng', ], family = 'binomial')\nglm_add <- glm(cbind(overt, null) ~ group, data = df_counts_wide[df_counts_wide$language == 'eng', ], family = 'binomial')\n\nanova(glm_null, glm_add, test = 'Chisq')\n\nsummary(glm_add)\n\n#Acceptance of nulls/overts as a function of proficiency\n  \n\nprof_plot <- df_counts_long %>%\n  filter(., language == 'eng') %>%\n  ggplot(., aes(x = profEn, y = perc, color = type)) + \n  facet_grid(.~ group) + \n  geom_jitter() + \n  geom_smooth(method = 'lm', se = F, fullrange = T) + \n  labs(y = \"% response\", x = 'English proficiency')\n\n#Model Summary\n\n#View(df_null_sub)\n\nmod_full <- glm(respFactor ~ profEn + group + profEn:group, data = df_null_sub[df_null_sub$language == 'eng', ], family = 'binomial')\nmod_add <- glm(respFactor ~ profEn + group, data = df_null_sub[df_null_sub$language == 'eng', ], family = 'binomial')\nmod_prof <- glm(respFactor ~ profEn, data = df_null_sub[df_null_sub$language == 'eng', ], family = 'binomial')\nmod_group <- glm(respFactor ~ group, data = df_null_sub[df_null_sub$language == 'eng', ], family = 'binomial')\nmod_null <- glm(respFactor ~ 1, data = df_null_sub[df_null_sub$language == 'eng', ], family = 'binomial')\n\nanova(mod_add, mod_full)\n\nanova(mod_null, mod_group, mod_prof, mod_add, mod_full, test = 'Chisq')\n\nanova(mod_null, mod_group, mod_add, test = 'Chisq')\n\n#Main effect of group, group + prof, and marginally significant interaction\n\nsummary(mod_full)\n\n#Spanish analysis\n\n#Spanish plot\n\nspanish_plot <- df_counts_long %>% \n  filter(., language == \"sp\")%>%\n  ggplot(., aes(x = group, y = perc, color = type, dodge = type)) + \n  stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', position = position_dodge(0.5), size = 1) + \n  stat_summary(fun.y = mean, geom = 'pointrange', position = position_dodge(0.5), size = 1) + \n  ylim(0, 1) + \n  labs(y = \"% Response\", x = 'Group')\n\n\n\n# test with GLM\ndf_counts_wide$group <- factor(df_counts_wide$group, levels = c(\"l2\", \"mo\", \"hl\"))\nglm_null <- glm(cbind(overt, null) ~ 1, data = df_counts_wide[df_counts_wide$language == 'sp', ], family = 'binomial')\nglm_add <- glm(cbind(overt, null) ~ group, data = df_counts_wide[df_counts_wide$language == 'sp', ], family = 'binomial')\n\nanova(glm_null, glm_add, test = 'Chisq')\n\nsummary(glm_add)\n\n#Acceptance of nulls/overts as a function of proficiency\n\n\nprof_plot_sp <- df_counts_long %>%\n  filter(., language == 'sp') %>%\n  ggplot(., aes(x = profEn, y = perc, color = type)) + \n  facet_grid(.~ group) + \n  geom_jitter() + \n  geom_smooth(method = 'lm', se = F, fullrange = T) + \n  labs(y = \"% response\", x = 'Spanish proficiency')\n\n#Model Summary\n\n#View(df_null_sub)\n\nmod_full <- glm(respFactor ~ profSp + group + profSp:group, data = df_null_sub[df_null_sub$language == 'sp', ], family = 'binomial')\nmod_add <- glm(respFactor ~ profSp + group, data = df_null_sub[df_null_sub$language == 'sp', ], family = 'binomial')\nmod_prof <- glm(respFactor ~ profSp, data = df_null_sub[df_null_sub$language == 'sp', ], family = 'binomial')\nmod_group <- glm(respFactor ~ group, data = df_null_sub[df_null_sub$language == 'sp', ], family = 'binomial')\nmod_null <- glm(respFactor ~ 1, data = df_null_sub[df_null_sub$language == 'sp', ], family = 'binomial')\n\nanova(mod_add, mod_full)\n\nanova(mod_null, mod_group, mod_prof, mod_add, mod_full, test = 'Chisq')\nanova(mod_null, mod_full, test = 'Chisq')\n\nsummary(mod_full)\n\n",
    "created" : 1525270543738.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "872612765",
    "id" : "D299C825",
    "lastKnownWriteTime" : 1525277493,
    "last_content_update" : 1525277493764,
    "path" : "~/Desktop/research_project/scripts/researchproject.R",
    "project_path" : "scripts/researchproject.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}